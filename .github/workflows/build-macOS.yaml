name: Build macOS Application
on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
# Add permissions block to allow release creation
permissions:
  contents: write  # Required for creating releases
  
jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # This ensures we get all history for versioning
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5 pandas pillow requests pyinstaller
        
    - name: Build app
      run: |
        # Create a macOS .app bundle
        pyinstaller --windowed --name "PSNZ Image Processor"  imageprocessor.py
        
        # Create a distributable DMG (optional, but recommended for macOS)
        # If you don't have an app_icon.icns, you can remove that line above
        # or create one from your app icon if available
        
        # The .app will be in the dist directory
        cd dist
        zip -r "PSNZ_Image_Processor_macOS.zip" "PSNZ Image Processor.app"
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: PSNZ-Image-Processor-macOS
        path: dist/PSNZ_Image_Processor_macOS.zip
        
    - name: Get version
      id: get_version
      shell: bash
      run: |
        # Generate a version based on date and time
        echo "version=$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      if: github.ref == 'refs/heads/main'  # Only run this step when pushing to main
      with:
        name: PSNZ Image Processor (macOS) v${{ steps.get_version.outputs.version }}
        tag_name: macos-v${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        files: |
          dist/PSNZ_Image_Processor_macOS.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
